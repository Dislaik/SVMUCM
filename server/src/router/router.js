const express = require('express');
const authRouter = require('./authRouter');
const apuRouter = require('./apuRouter');
const roleRouter = require('./roleRouter')
const userRouter = require('./userRouter');
const userStatusRouter = require('./userStatusRouter');
const headquarterRouter = require('./headquarterRouter');
const facultyRouter = require('./facultyRouter');
const careerRouter = require('./careerRouter');
const regionRouter = require('./regionRouter');
const cityRouter = require('./cityRouter');
const projectStatusRouter = require('./projectStatusRouter');
const resourceRouter = require('./resourceRouter');
const project = require('./projectRouter');
const quotationStatusRouter = require('./quotationStatusRouter')
const apuResource = require('./apuResourceRouter');
const quotationRouter = require('./quotationRouter');
const projectUserRouter = require('./projectUserRouter');
const VolunteerStudentRouter = require('./volunteerStudentRouter');
const ProjectVolunteerStudentRouter = require('./projectVolunteerStudentRouter');
const QuotationAPUResourceRouter = require('./quotationAPUResourceRouter');
const UserFacultyRouter = require('./userFacultyRouter');
const RecoveryPasswordController = require('./recoveryPasswordRouter');
let router = express.Router();

// Se crean los endpoint de los controladores y se agrupan para crear un solo stack
router.stack = router.stack.concat(authRouter.stack);
router.stack = router.stack.concat(apuRouter.stack);
router.stack = router.stack.concat(resourceRouter.stack);
router.stack = router.stack.concat(projectStatusRouter.stack);
router.stack = router.stack.concat(project.stack);
router.stack = router.stack.concat(quotationStatusRouter.stack);
router.stack = router.stack.concat(cityRouter.stack);
router.stack = router.stack.concat(regionRouter.stack);
router.stack = router.stack.concat(headquarterRouter.stack);
router.stack = router.stack.concat(facultyRouter.stack);
router.stack = router.stack.concat(careerRouter.stack);
router.stack = router.stack.concat(roleRouter.stack);
router.stack = router.stack.concat(userRouter.stack);
router.stack = router.stack.concat(userStatusRouter.stack);
router.stack = router.stack.concat(apuResource.stack);
router.stack = router.stack.concat(quotationRouter.stack);
router.stack = router.stack.concat(projectUserRouter.stack);
router.stack = router.stack.concat(VolunteerStudentRouter.stack);
router.stack = router.stack.concat(ProjectVolunteerStudentRouter.stack);
router.stack = router.stack.concat(QuotationAPUResourceRouter.stack);
router.stack = router.stack.concat(UserFacultyRouter.stack);
router.stack = router.stack.concat(RecoveryPasswordController.stack);

module.exports = router;